declare namespace UnityEngine
{
	export namespace AndroidJNI
	{
		export function AllocObject(clazz: number): number;
		export function AttachCurrentThread(): number;
		export function CallBooleanMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallByteMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallCharMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallDoubleMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallFloatMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallIntMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallLongMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallObjectMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallShortMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticBooleanMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticByteMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticCharMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticDoubleMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticFloatMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticIntMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticLongMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticObjectMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticShortMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function CallStaticStringMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): string;
		export function CallStaticVoidMethod(clazz: number, methodID: number, args: UnityEngine.jvalue[]): void;
		export function CallStringMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): string;
		export function CallVoidMethod(obj: number, methodID: number, args: UnityEngine.jvalue[]): void;
		export function DeleteGlobalRef(obj: number): void;
		export function DeleteLocalRef(obj: number): void;
		export function DetachCurrentThread(): number;
		export function EnsureLocalCapacity(capacity: number): number;
		export function ExceptionClear(): void;
		export function ExceptionDescribe(): void;
		export function ExceptionOccurred(): number;
		export function FatalError(message: string): void;
		export function FindClass(name: string): number;
		export function FromBooleanArray(array: number): number[];
		export function FromByteArray(array: number): number[];
		export function FromCharArray(array: number): number[];
		export function FromDoubleArray(array: number): number[];
		export function FromFloatArray(array: number): number[];
		export function FromIntArray(array: number): number[];
		export function FromLongArray(array: number): number[];
		export function FromObjectArray(array: number): number[];
		export function FromReflectedField(refField: number): number;
		export function FromReflectedMethod(refMethod: number): number;
		export function FromShortArray(array: number): number[];
		export function GetArrayLength(array: number): number;
		export function GetBooleanArrayElement(array: number, index: number): number;
		export function GetBooleanField(obj: number, fieldID: number): number;
		export function GetByteArrayElement(array: number, index: number): number;
		export function GetByteField(obj: number, fieldID: number): number;
		export function GetCharArrayElement(array: number, index: number): number;
		export function GetCharField(obj: number, fieldID: number): number;
		export function GetDoubleArrayElement(array: number, index: number): number;
		export function GetDoubleField(obj: number, fieldID: number): number;
		export function GetFieldID(clazz: number, name: string, sig: string): number;
		export function GetFloatArrayElement(array: number, index: number): number;
		export function GetFloatField(obj: number, fieldID: number): number;
		export function GetIntArrayElement(array: number, index: number): number;
		export function GetIntField(obj: number, fieldID: number): number;
		export function GetLongArrayElement(array: number, index: number): number;
		export function GetLongField(obj: number, fieldID: number): number;
		export function GetMethodID(clazz: number, name: string, sig: string): number;
		export function GetObjectArrayElement(array: number, index: number): number;
		export function GetObjectClass(obj: number): number;
		export function GetObjectField(obj: number, fieldID: number): number;
		export function GetShortArrayElement(array: number, index: number): number;
		export function GetShortField(obj: number, fieldID: number): number;
		export function GetStaticBooleanField(clazz: number, fieldID: number): number;
		export function GetStaticByteField(clazz: number, fieldID: number): number;
		export function GetStaticCharField(clazz: number, fieldID: number): number;
		export function GetStaticDoubleField(clazz: number, fieldID: number): number;
		export function GetStaticFieldID(clazz: number, name: string, sig: string): number;
		export function GetStaticFloatField(clazz: number, fieldID: number): number;
		export function GetStaticIntField(clazz: number, fieldID: number): number;
		export function GetStaticLongField(clazz: number, fieldID: number): number;
		export function GetStaticMethodID(clazz: number, name: string, sig: string): number;
		export function GetStaticObjectField(clazz: number, fieldID: number): number;
		export function GetStaticShortField(clazz: number, fieldID: number): number;
		export function GetStaticStringField(clazz: number, fieldID: number): string;
		export function GetStringField(obj: number, fieldID: number): string;
		export function GetStringUTFChars(str: number): string;
		export function GetStringUTFLength(str: number): number;
		export function GetSuperclass(clazz: number): number;
		export function GetVersion(): number;
		export function IsAssignableFrom(clazz1: number, clazz2: number): number;
		export function IsInstanceOf(obj: number, clazz: number): number;
		export function IsSameObject(obj1: number, obj2: number): number;
		export function NewBooleanArray(size: number): number;
		export function NewByteArray(size: number): number;
		export function NewCharArray(size: number): number;
		export function NewDoubleArray(size: number): number;
		export function NewFloatArray(size: number): number;
		export function NewGlobalRef(obj: number): number;
		export function NewIntArray(size: number): number;
		export function NewLocalRef(obj: number): number;
		export function NewLongArray(size: number): number;
		export function NewObject(clazz: number, methodID: number, args: UnityEngine.jvalue[]): number;
		export function NewObjectArray(size: number, clazz: number, obj: number): number;
		export function NewShortArray(size: number): number;
		export function NewStringUTF(bytes: string): number;
		export function PopLocalFrame(ptr: number): number;
		export function PushLocalFrame(capacity: number): number;
		export function SetBooleanArrayElement(array: number, index: number, val: number): void;
		export function SetBooleanField(obj: number, fieldID: number, val: number): void;
		export function SetByteArrayElement(array: number, index: number, val: number): void;
		export function SetByteField(obj: number, fieldID: number, val: number): void;
		export function SetCharArrayElement(array: number, index: number, val: number): void;
		export function SetCharField(obj: number, fieldID: number, val: number): void;
		export function SetDoubleArrayElement(array: number, index: number, val: number): void;
		export function SetDoubleField(obj: number, fieldID: number, val: number): void;
		export function SetFloatArrayElement(array: number, index: number, val: number): void;
		export function SetFloatField(obj: number, fieldID: number, val: number): void;
		export function SetIntArrayElement(array: number, index: number, val: number): void;
		export function SetIntField(obj: number, fieldID: number, val: number): void;
		export function SetLongArrayElement(array: number, index: number, val: number): void;
		export function SetLongField(obj: number, fieldID: number, val: number): void;
		export function SetObjectArrayElement(array: number, index: number, obj: number): void;
		export function SetObjectField(obj: number, fieldID: number, val: number): void;
		export function SetShortArrayElement(array: number, index: number, val: number): void;
		export function SetShortField(obj: number, fieldID: number, val: number): void;
		export function SetStaticBooleanField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticByteField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticCharField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticDoubleField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticFloatField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticIntField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticLongField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticObjectField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticShortField(clazz: number, fieldID: number, val: number): void;
		export function SetStaticStringField(clazz: number, fieldID: number, val: string): void;
		export function SetStringField(obj: number, fieldID: number, val: string): void;
		export function Throw(obj: number): number;
		export function ThrowNew(clazz: number, message: string): number;
		export function ToBooleanArray(array: number[]): number;
		export function ToByteArray(array: number[]): number;
		export function ToCharArray(array: number[]): number;
		export function ToDoubleArray(array: number[]): number;
		export function ToFloatArray(array: number[]): number;
		export function ToIntArray(array: number[]): number;
		export function ToLongArray(array: number[]): number;
		export function ToObjectArray(array: number[]): number;
		export function ToObjectArray(array: number[], arrayClass: number): number;
		export function ToReflectedField(clazz: number, fieldID: number, isStatic: number): number;
		export function ToReflectedMethod(clazz: number, methodID: number, isStatic: number): number;
		export function ToShortArray(array: number[]): number;
	}
	export class AndroidJNI
	{
	}
}
