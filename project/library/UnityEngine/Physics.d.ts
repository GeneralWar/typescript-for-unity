declare namespace UnityEngine
{
	export namespace Physics
	{
		export function BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3): boolean;
		export function BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion): boolean;
		export function BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number): boolean;
		export function BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number): boolean;
		export function BoxCast(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3): UnityEngine.RaycastHit[];
		export function BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion): UnityEngine.RaycastHit[];
		export function BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number): UnityEngine.RaycastHit[];
		export function BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
		export function BoxCastAll(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
		export function BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[]): number;
		export function BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], orientation: UnityEngine.Quaternion): number;
		export function BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], orientation: UnityEngine.Quaternion, maxDistance: number): number;
		export function BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number): number;
		export function BoxCastNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], orientation: UnityEngine.Quaternion, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3): boolean;
		export function CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number): boolean;
		export function CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number): boolean;
		export function CapsuleCast(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function CapsuleCastAll(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3): UnityEngine.RaycastHit[];
		export function CapsuleCastAll(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number): UnityEngine.RaycastHit[];
		export function CapsuleCastAll(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
		export function CapsuleCastAll(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
		export function CapsuleCastNonAlloc(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[]): number;
		export function CapsuleCastNonAlloc(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number): number;
		export function CapsuleCastNonAlloc(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number): number;
		export function CapsuleCastNonAlloc(point1: UnityEngine.Vector3, point2: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function CheckBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3): boolean;
		export function CheckBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion): boolean;
		export function CheckBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, layerMask: number): boolean;
		export function CheckBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, layermask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function CheckCapsule(start: UnityEngine.Vector3, end: UnityEngine.Vector3, radius: number): boolean;
		export function CheckCapsule(start: UnityEngine.Vector3, end: UnityEngine.Vector3, radius: number, layerMask: number): boolean;
		export function CheckCapsule(start: UnityEngine.Vector3, end: UnityEngine.Vector3, radius: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function CheckSphere(position: UnityEngine.Vector3, radius: number): boolean;
		export function CheckSphere(position: UnityEngine.Vector3, radius: number, layerMask: number): boolean;
		export function CheckSphere(position: UnityEngine.Vector3, radius: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function ClosestPoint(point: UnityEngine.Vector3, collider: UnityEngine.Collider, position: UnityEngine.Vector3, rotation: UnityEngine.Quaternion): UnityEngine.Vector3;
		export function GetIgnoreLayerCollision(layer1: number, layer2: number): boolean;
		export function IgnoreCollision(collider1: UnityEngine.Collider, collider2: UnityEngine.Collider): void;
		export function IgnoreCollision(collider1: UnityEngine.Collider, collider2: UnityEngine.Collider, ignore: boolean): void;
		export function IgnoreLayerCollision(layer1: number, layer2: number): void;
		export function IgnoreLayerCollision(layer1: number, layer2: number, ignore: boolean): void;
		export function Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3): boolean;
		export function Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3, layerMask: number): boolean;
		export function Linecast(start: UnityEngine.Vector3, end: UnityEngine.Vector3, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function OverlapBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3): UnityEngine.Collider[];
		export function OverlapBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion): UnityEngine.Collider[];
		export function OverlapBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, layerMask: number): UnityEngine.Collider[];
		export function OverlapBox(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, orientation: UnityEngine.Quaternion, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.Collider[];
		export function OverlapBoxNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, results: UnityEngine.Collider[]): number;
		export function OverlapBoxNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, results: UnityEngine.Collider[], orientation: UnityEngine.Quaternion): number;
		export function OverlapBoxNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, results: UnityEngine.Collider[], orientation: UnityEngine.Quaternion, mask: number): number;
		export function OverlapBoxNonAlloc(center: UnityEngine.Vector3, halfExtents: UnityEngine.Vector3, results: UnityEngine.Collider[], orientation: UnityEngine.Quaternion, mask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function OverlapCapsule(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number): UnityEngine.Collider[];
		export function OverlapCapsule(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, layerMask: number): UnityEngine.Collider[];
		export function OverlapCapsule(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.Collider[];
		export function OverlapCapsuleNonAlloc(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[]): number;
		export function OverlapCapsuleNonAlloc(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[], layerMask: number): number;
		export function OverlapCapsuleNonAlloc(point0: UnityEngine.Vector3, point1: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[], layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function OverlapSphere(position: UnityEngine.Vector3, radius: number): UnityEngine.Collider[];
		export function OverlapSphere(position: UnityEngine.Vector3, radius: number, layerMask: number): UnityEngine.Collider[];
		export function OverlapSphere(position: UnityEngine.Vector3, radius: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.Collider[];
		export function OverlapSphereNonAlloc(position: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[]): number;
		export function OverlapSphereNonAlloc(position: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[], layerMask: number): number;
		export function OverlapSphereNonAlloc(position: UnityEngine.Vector3, radius: number, results: UnityEngine.Collider[], layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function Raycast(ray: UnityEngine.Ray): boolean;
		export function Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3): boolean;
		export function Raycast(ray: UnityEngine.Ray, maxDistance: number): boolean;
		export function Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number): boolean;
		export function Raycast(ray: UnityEngine.Ray, maxDistance: number, layerMask: number): boolean;
		export function Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number): boolean;
		export function Raycast(ray: UnityEngine.Ray, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function Raycast(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function RaycastAll(ray: UnityEngine.Ray): UnityEngine.RaycastHit[];
		export function RaycastAll(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3): UnityEngine.RaycastHit[];
		export function RaycastAll(ray: UnityEngine.Ray, maxDistance: number): UnityEngine.RaycastHit[];
		export function RaycastAll(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number): UnityEngine.RaycastHit[];
		export function RaycastAll(ray: UnityEngine.Ray, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
		export function RaycastAll(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
		export function RaycastAll(ray: UnityEngine.Ray, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
		export function RaycastAll(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
		export function RaycastNonAlloc(ray: UnityEngine.Ray, results: UnityEngine.RaycastHit[]): number;
		export function RaycastNonAlloc(ray: UnityEngine.Ray, results: UnityEngine.RaycastHit[], maxDistance: number): number;
		export function RaycastNonAlloc(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[]): number;
		export function RaycastNonAlloc(ray: UnityEngine.Ray, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number): number;
		export function RaycastNonAlloc(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number): number;
		export function RaycastNonAlloc(ray: UnityEngine.Ray, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function RaycastNonAlloc(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number): number;
		export function RaycastNonAlloc(origin: UnityEngine.Vector3, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function RebuildBroadphaseRegions(worldBounds: UnityEngine.Bounds, subdivisions: number): void;
		export function Simulate(step: number): void;
		export function SphereCast(ray: UnityEngine.Ray, radius: number): boolean;
		export function SphereCast(ray: UnityEngine.Ray, radius: number, maxDistance: number): boolean;
		export function SphereCast(ray: UnityEngine.Ray, radius: number, maxDistance: number, layerMask: number): boolean;
		export function SphereCast(ray: UnityEngine.Ray, radius: number, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): boolean;
		export function SphereCastAll(ray: UnityEngine.Ray, radius: number): UnityEngine.RaycastHit[];
		export function SphereCastAll(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3): UnityEngine.RaycastHit[];
		export function SphereCastAll(ray: UnityEngine.Ray, radius: number, maxDistance: number): UnityEngine.RaycastHit[];
		export function SphereCastAll(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number): UnityEngine.RaycastHit[];
		export function SphereCastAll(ray: UnityEngine.Ray, radius: number, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
		export function SphereCastAll(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number): UnityEngine.RaycastHit[];
		export function SphereCastAll(ray: UnityEngine.Ray, radius: number, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
		export function SphereCastAll(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): UnityEngine.RaycastHit[];
		export function SphereCastNonAlloc(ray: UnityEngine.Ray, radius: number, results: UnityEngine.RaycastHit[]): number;
		export function SphereCastNonAlloc(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[]): number;
		export function SphereCastNonAlloc(ray: UnityEngine.Ray, radius: number, results: UnityEngine.RaycastHit[], maxDistance: number): number;
		export function SphereCastNonAlloc(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number): number;
		export function SphereCastNonAlloc(ray: UnityEngine.Ray, radius: number, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number): number;
		export function SphereCastNonAlloc(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number): number;
		export function SphereCastNonAlloc(ray: UnityEngine.Ray, radius: number, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function SphereCastNonAlloc(origin: UnityEngine.Vector3, radius: number, direction: UnityEngine.Vector3, results: UnityEngine.RaycastHit[], maxDistance: number, layerMask: number, queryTriggerInteraction: UnityEngine.QueryTriggerInteraction): number;
		export function SyncTransforms(): void;
	}
	export class Physics
	{
		public constructor();
		static public get gravity(): UnityEngine.Vector3;
		static public set gravity(): UnityEngine.Vector3;
		static public get defaultContactOffset(): number;
		static public set defaultContactOffset(): number;
		static public get sleepThreshold(): number;
		static public set sleepThreshold(): number;
		static public get queriesHitTriggers(): boolean;
		static public set queriesHitTriggers(): boolean;
		static public get queriesHitBackfaces(): boolean;
		static public set queriesHitBackfaces(): boolean;
		static public get bounceThreshold(): number;
		static public set bounceThreshold(): number;
		static public get defaultSolverIterations(): number;
		static public set defaultSolverIterations(): number;
		static public get defaultSolverVelocityIterations(): number;
		static public set defaultSolverVelocityIterations(): number;
		static public get defaultPhysicsScene(): UnityEngine.PhysicsScene;
		static public get autoSimulation(): boolean;
		static public set autoSimulation(): boolean;
		static public get autoSyncTransforms(): boolean;
		static public set autoSyncTransforms(): boolean;
		static public get reuseCollisionCallbacks(): boolean;
		static public set reuseCollisionCallbacks(): boolean;
		static public get interCollisionDistance(): number;
		static public set interCollisionDistance(): number;
		static public get interCollisionStiffness(): number;
		static public set interCollisionStiffness(): number;
		static public get interCollisionSettingsToggle(): boolean;
		static public set interCollisionSettingsToggle(): boolean;
	}
}
