declare namespace UnityEngine
{
	export class Material extends UnityEngine.Object
	{
		public constructor(shader: UnityEngine.Shader);
		public constructor(source: UnityEngine.Material);
		public CopyPropertiesFromMaterial(mat: UnityEngine.Material): void;
		public DisableKeyword(keyword: string): void;
		public EnableKeyword(keyword: string): void;
		public FindPass(passName: string): number;
		public GetColor(name: string): UnityEngine.Color;
		public GetColor(nameID: number): UnityEngine.Color;
		public GetColorArray(name: string): UnityEngine.Color[];
		public GetColorArray(nameID: number): UnityEngine.Color[];
		public GetFloat(name: string): number;
		public GetFloat(nameID: number): number;
		public GetFloatArray(name: string): number[];
		public GetFloatArray(nameID: number): number[];
		public GetInt(name: string): number;
		public GetInt(nameID: number): number;
		public GetMatrix(name: string): UnityEngine.Matrix4x4;
		public GetMatrix(nameID: number): UnityEngine.Matrix4x4;
		public GetMatrixArray(name: string): UnityEngine.Matrix4x4[];
		public GetMatrixArray(nameID: number): UnityEngine.Matrix4x4[];
		public GetPassName(pass: number): string;
		public GetShaderPassEnabled(passName: string): number;
		public GetTag(tag: string, searchFallbacks: number): string;
		public GetTag(tag: string, searchFallbacks: number, defaultValue: string): string;
		public GetTexture(name: string): UnityEngine.Texture;
		public GetTexture(nameID: number): UnityEngine.Texture;
		public GetTextureOffset(name: string): UnityEngine.Vector2;
		public GetTextureOffset(nameID: number): UnityEngine.Vector2;
		public GetTexturePropertyNameIDs(): number[];
		public GetTexturePropertyNames(): string[];
		public GetTextureScale(name: string): UnityEngine.Vector2;
		public GetTextureScale(nameID: number): UnityEngine.Vector2;
		public GetVector(name: string): UnityEngine.Vector4;
		public GetVector(nameID: number): UnityEngine.Vector4;
		public GetVectorArray(name: string): UnityEngine.Vector4[];
		public GetVectorArray(nameID: number): UnityEngine.Vector4[];
		public HasProperty(nameID: number): number;
		public HasProperty(name: string): number;
		public IsKeywordEnabled(keyword: string): number;
		public Lerp(start: UnityEngine.Material, end: UnityEngine.Material, t: number): void;
		public SetBuffer(name: string, value: UnityEngine.ComputeBuffer): void;
		public SetBuffer(nameID: number, value: UnityEngine.ComputeBuffer): void;
		public SetColor(name: string, value: UnityEngine.Color): void;
		public SetColor(nameID: number, value: UnityEngine.Color): void;
		public SetColorArray(name: string, values: UnityEngine.Color[]): void;
		public SetColorArray(nameID: number, values: UnityEngine.Color[]): void;
		public SetFloat(name: string, value: number): void;
		public SetFloat(nameID: number, value: number): void;
		public SetFloatArray(name: string, values: number[]): void;
		public SetFloatArray(nameID: number, values: number[]): void;
		public SetInt(name: string, value: number): void;
		public SetInt(nameID: number, value: number): void;
		public SetMatrix(name: string, value: UnityEngine.Matrix4x4): void;
		public SetMatrix(nameID: number, value: UnityEngine.Matrix4x4): void;
		public SetMatrixArray(name: string, values: UnityEngine.Matrix4x4[]): void;
		public SetMatrixArray(nameID: number, values: UnityEngine.Matrix4x4[]): void;
		public SetOverrideTag(tag: string, val: string): void;
		public SetPass(pass: number): number;
		public SetShaderPassEnabled(passName: string, enabled: number): void;
		public SetTexture(name: string, value: UnityEngine.Texture): void;
		public SetTexture(nameID: number, value: UnityEngine.Texture): void;
		public SetTextureOffset(name: string, value: UnityEngine.Vector2): void;
		public SetTextureOffset(nameID: number, value: UnityEngine.Vector2): void;
		public SetTextureScale(name: string, value: UnityEngine.Vector2): void;
		public SetTextureScale(nameID: number, value: UnityEngine.Vector2): void;
		public SetVector(name: string, value: UnityEngine.Vector4): void;
		public SetVector(nameID: number, value: UnityEngine.Vector4): void;
		public SetVectorArray(name: string, values: UnityEngine.Vector4[]): void;
		public SetVectorArray(nameID: number, values: UnityEngine.Vector4[]): void;
		public get shader(): UnityEngine.Shader;
		public set shader(): UnityEngine.Shader;
		public get color(): UnityEngine.Color;
		public set color(): UnityEngine.Color;
		public get mainTexture(): UnityEngine.Texture;
		public set mainTexture(): UnityEngine.Texture;
		public get mainTextureOffset(): UnityEngine.Vector2;
		public set mainTextureOffset(): UnityEngine.Vector2;
		public get mainTextureScale(): UnityEngine.Vector2;
		public set mainTextureScale(): UnityEngine.Vector2;
		public get renderQueue(): number;
		public set renderQueue(): number;
		public get globalIlluminationFlags(): UnityEngine.MaterialGlobalIlluminationFlags;
		public set globalIlluminationFlags(): UnityEngine.MaterialGlobalIlluminationFlags;
		public get doubleSidedGI(): number;
		public set doubleSidedGI(): number;
		public get enableInstancing(): number;
		public set enableInstancing(): number;
		public get passCount(): number;
		public get shaderKeywords(): string[];
		public set shaderKeywords(): string[];
	}
}
