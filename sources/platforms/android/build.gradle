// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }
    buildDir = "F:/temp/typescript-for-unity/"
}

apply plugin: 'com.android.application'


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

android {
    compileSdkVersion 28

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        applicationId 'com.soulfire.typescript'
        ndk {
            abiFilters 'armeabi-v7a', "arm64-v8a", 'x86'
        }
        versionCode 1
        versionName '0.1'
        externalNativeBuild {
            ndkBuild {
                cppFlags "-std=c++11"
                ndkBuild {
                    targets 'typescript'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'
                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(["armeabi-v7a", "arm64-v8a", "x86"])
                }
            }
        }
        sourceSets { main { jniLibs.srcDirs = ['libs'] } }
    }
    externalNativeBuild{
        ndkBuild {
            path file("Android.mk")
        }
    }

//    lintOptions {
//        abortOnError false
//    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', 'scripts/destroyer.gts', 'scripts/main.gts', 'scripts/timer.gts', 'scripts/welcome.gts', 'typescript/natives_blob.bin', 'typescript/snapshot_blob.bin', 'typescript/v8_context_snapshot.bin']
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
        release {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.debug
        }
    }

//    packagingOptions {
//        doNotStrip '*/armeabi-v7a/*.so'
//        doNotStrip '*/x86/*.so'
//    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}
